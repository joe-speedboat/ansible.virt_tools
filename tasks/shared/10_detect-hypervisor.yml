# 10_detect-hypervisor.yml
---
- name: check if system is virtual
  set_fact:
    is_virtual_machine: True
  when: ansible_system_vendor == "VMware, Inc." or ansible_system_vendor == "Red Hat"

- name: handle vm tools for virtual machines
  block: 

  - name: handle VMware hypervisors
    block:
    - name: find vmtoolsd binary
      shell: which vmtoolsd
      register: file_vmtoolsd
      failed_when: false
      changed_when: False

    - name: find vmtoolsd process
      shell: pgrep -fl vmtoolsd
      register: process_vmtoolsd
      when: file_vmtoolsd.rc == 0
      failed_when: false
      changed_when: False
    when: ansible_system_vendor == "VMware, Inc."

  - name: handle kvm hypervisors
    block:
    - name: find qemu-ga binary
      shell: which qemu-ga
      register: file_qemu_ga
      failed_when: false
      changed_when: False

    - name: find qemu-ga process
      shell: pgrep -fl qemu-ga
      register: process_qemu_ga
      when: file_qemu_ga.rc == 0
      failed_when: false
      changed_when: False
    when: ansible_system_vendor == "Red Hat"

  - name: decide virt tools are installed
    set_fact:
      file_virt_tools: True
    when: file_qemu_ga.rc|default('') == 0 or file_vmtoolsd.rc|default('') == 0 

  - name: decide virt tools are running
    set_fact:
      process_virt_tools: True
    when: process_qemu_ga.rc|default('') == 0 or process_vmtoolsd.rc|default('') == 0 

  - name: decide about installing vmware tools
    set_fact:
      do_install_tools: True
    when: file_virt_tools == False and process_virt_tools == False
  when: is_virtual_machine == True

- name: debug print hypervisor details
  vars:
    msg: |
      ansible_system_vendor={{ ansible_system_vendor|default('') }}
      ansible_board_vendor={{ ansible_board_vendor|default('') }}
      ansible_chassis_vendor={{ ansible_chassis_vendor|default('') }}
      file_virt_tools={{ file_virt_tools|default('') }}
      process_virt_tools={{ process_virt_tools|default('') }}
      is_virtual_machine={{ is_virtual_machine }}
      do_install_tools={{ do_install_tools }}
  debug:
    msg: "{{ msg.split('\n') }}"
...
